[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "jdeep-finder"
requires-python = ">=3.9"
classifiers = [
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
]

version = "0.4.0"
dependencies = [
    "tensorflow[and-cuda]",
    "lxml>=4.9.3",
    "numpy<2",
    "copick[all]",
    "trimesh",
    "mrcfile>=1.4.3",
    "matplotlib>=3.8.1",
    "scikit-learn==1.3.2",
    "scikit-image==0.22.0",
    "starfile",
    "ome-zarr",
    "pycm",
    "openpyxl"
]

authors = [
  {name = "Jonathan Schwartz", email = "jonathan.schwartz@czii.org"},
  {name = "Utz Ermel", email = "utz.ermel@czii.org"}
]

description = "Definitions for a collaborative cryoET annotation tool."
readme = "README.md"
license = {file = "LICENSE"}
keywords = ["cryoet", "cryo-et", "tomography", "annotation", "segmentation", "collaborative", "copick"]

[project.scripts]
step1 = "step1:cli"
step2 = "step2:cli"
step3 = "step3:cli"
step4 = "step4:cli"

[project.optional-dependencies]
dev = [
    "black",
    "ipython",
    "pre-commit",
    "ruff",
    "notebook",
]
mpi = ["mpi4py"]

[tool.hatch.build.targets.wheel]
packages = ["deepfinder"]

[tool.hatch.metadata]
allow-direct-references = true

[tool.black]
line-length = 120
target_version = ['py311']

[tool.ruff]
select = [
    "E", "W",  # pycodestyle
    "F",       # pyflakes
    "B",       # bugbear
    "I",       # isort
    "N",       # pep8-naming
    "ASYNC",   # async
    "COM",     # commas
    "C4",      # comprehensions
    "DTZ",     # datetimez
    "ISC",     # implicit-str-concat
    "G",       # logging-format
    "T20",     # print
    "SIM",     # simplify
]
ignore = [
    "N817",   # variable in function should be lowercase
    "E402",   # module level import not at top of file
    "N801",   # variable in function should be lowercase
    "E721",   # do not compare types, use `isinstance()`
    "N816",   # variable in function should be lowercase
    "E741",   # ambiguous variable name
    "N803",   # argument name should be lowercase
    "G004",   # logging format
    "W293",   # blank line contains whitespace
    "B008",   # Do not perform calls in argument defaults
    "B905",   # `zip()` without an explicit `strict=` parameter
    "N802",   # Function name should be lowercase
    "N805",   # First argument of a method should be named `self`
    "N806",   # Variable in function should be lowercase
    "N999",   # Invalid module name
    "E501",   # line too long
    "C408",   # rewrite empty built-ins as literals
    "T201",   # print statements.
    "DTZ007", # Datetime objects without timezones.
    "DTZ005", # More datetimes without timezones.
]
line-length = 120
target-version = "py311"
exclude = [
    "mkdocs.yml",
]

[tool.ruff.isort]
known-first-party =["common"]

[tool.ruff.flake8-quotes]
docstring-quotes = "double"
